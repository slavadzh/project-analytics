plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper:modelmapper:3.2.1'
    // OkHttp для выполнения HTTP-запросов
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.jfree:jfreechart:1.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // Gson для работы с JSON
    implementation 'com.google.code.gson:gson:2.10'

    // Apache Commons Codec (опционально, для генерации MD5)
    implementation 'commons-codec:commons-codec:1.16.0'
}

test {
    useJUnitPlatform()
}

